# log transformation
setwd("/Users/yuliu/Bladder/publicData")
data <- read.csv("non_normalized_data.csv",header=T, row.names=1)
data[data<=0] = 0
data_log <- log(data + 1, 2)
boxplot(data_log)
write.csv(data_log, file="log_transformed.csv")

# normalization
library(preprocessCore)
setwd("/Users/yuliu/Bladder/publicData")
data <- read.csv("non_normalized_data.csv",header=T)
head(data)
rownames(data) <- data[,1]
data_mat <- data.matrix(data[,-1]) 
head(data_mat)
data_norm <- normalize.quantiles(data_mat, copy = TRUE)
pdf("after_norm.pdf")
boxplot(data_norm)
dev.off()
write.csv(data_norm, file="quantile_norm.csv")

# convert to gene symbol
library("illuminaHumanv4.db")
data <- read.csv("quantile_norm2.csv", header=T, row.names=1)
symbols <- mapIds(illuminaHumanv4.db, rownames(data), "SYMBOL","PROBEID")
write.csv(as.data.frame(symbols), file="geneSymbolMap.csv")

# select the probe with max expression as gene expression
mydat <- read.table("quantile_norm3_gene_symbol2.csv", header = T, sep = ",")
mydat.max <- aggregate(. ~ symbols, data = mydat, max)
head(mydat.max)
write.csv(mydat.max, file="quantile_norm3_gene_symbol3.csv", row.names=FALSE)

# intersect of two tables
gg<-intersect(rownames(BLCA),rownames(exprM))
head(BLCA[gg,])



setwd("/Users/yuliu/Bladder_ML/resource")
gse48276 <- read.csv("GSE48276_exprM_init.csv", header=T, row.names=1)
gse48276[gse48276<=0] = 0
gse48276_log <- log(gse48276 + 1, 2)
boxplot(gse48276_log)
library(preprocessCore)
gse48276_mat <- as.matrix(gse48276_log)
gse48276_norm <- normalize.quantiles(gse48276_mat, copy = TRUE)
boxplot(gse48276_norm)
row.names(gse48276_norm) <- row.names(gse48276)
colnames(gse48276_norm) <- colnames(gse48276)
write.csv(gse48276_norm, file="GSE48276_norm.csv", row.names=T)
 
